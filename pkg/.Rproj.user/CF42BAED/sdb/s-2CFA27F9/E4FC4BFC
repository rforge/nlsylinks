{
    "contents" : "#' @name Ace\n#' @aliases AceUnivariate DeFriesFulkerMethod1 DeFriesFulkerMethod3\n#' @export AceUnivariate DeFriesFulkerMethod1 DeFriesFulkerMethod3\n#' \n#' @title Estimates the heritability of additive traits using a single variable.\n#' \n#' @usage AceUnivariate(method=c(\"DeFriesFulkerMethod1\",\"DeFriesFulkerMethod3\"), dataSet, oName_1, oName_2, rName=\"R\", manifestScale=\"Continuous\")\n#' \n#' DeFriesFulkerMethod1(dataSet, oName_1, oName_2, rName=\"R\")\n#' \n#' DeFriesFulkerMethod3(dataSet, oName_1, oName_2, rName=\"R\")\n#' \n#' @description An ACE model is the foundation of most Behavior Genetic research.  It\n#' estimates the additive heritability (with \\emph{a}), common environment\n#' (with \\emph{c}) and unshared heritability/environment (with \\emph{e}).\n#' \n#' The \\code{AceUnivariate} function is a wrapper that calls\n#' \\code{DeFriesFulkerMethod1} or \\code{DeFriesFulkerMethod3}.  Future\n#' versions will incorporate methods that use latent variable models.\n#' \n#' @param method The specific estimation technique.\n#' @param dataSet The \\code{data.frame} that contains the two outcome\n#' variables and the relatedness coefficient (corresponding to \\code{oName_1},\n#' \\code{oName_2}, and \\code{rName})\n#' @param oName_1 The name of the outcome variable corresponding to the first\n#' subject in the pair. This should be a \\code{character} value.\n#' @param oName_2 The name of theoutcome variable corresponding to the second\n#' subject in the pair. This should be a \\code{character} value.\n#' @param rName The name of the relatedness coefficient for the pair (this is\n#' typically abbreviated as \\code{R}). This should be a \\code{character}\n#' value.\n#' @param manifestScale Currently, only continuous manifest/outcome variables\n#' are supported.\n#' @return Currently, a list is returned with the arguments \\code{HSquared},\n#' \\code{CSquared}, \\code{ESquared}, and \\code{RowCount}.  In the future, this\n#' may be changed to an \\code{S4} class.\n#' @author Will Beasley\n#' @references Rodgers, Joseph Lee, & Kohler, Hans-Peter (2005).\n#' Reformulating and simplifying the DF analysis model.\n#' \\href{http://www.springerlink.com/content/n3x1v1q282583366/}{\\emph{Behavior Genetics, 35 (2), 211-217}}.\n#' @examples\n#' \n#' library(NlsyLinks) #Load the package into the current R session.\n#' data(ExtraOutcomes79)\n#' dsOutcomes <- ExtraOutcomes79\n#' dsOutcomes$SubjectTag <- CreateSubjectTag(subjectID=dsOutcomes$SubjectID,\n#'   generation=dsOutcomes$Generation)\n#' dsLinks <- Links79Pair\n#' dsLinks <- dsLinks[dsLinks$RelationshipPath=='Gen2Siblings', ] #Use only the Gen2 Siblings (ie, NLSY79-C subjects)\n#' dsDF <- CreatePairLinksDoubleEntered(outcomeDataset=dsOutcomes, linksPairDataset=dsLinks, \n#'   outcomeNames=c(\"MathStandardized\", \"HeightZGenderAge\", \"WeightZGenderAge\"))\n#' \n#' estimatedAdultHeight <- DeFriesFulkerMethod3(\n#'   dataSet=dsDF,    \n#'   oName_1=\"HeightZGenderAge_1\", \n#'   oName_2=\"HeightZGenderAge_2\")  \n#' estimatedAdultHeight #ASquared and CSquared should be 0.60 and 0.10 for this rough analysis.\n#' \n#' estimatedMath <- DeFriesFulkerMethod3(\n#'   dataSet=dsDF,    \n#'   oName_1=\"MathStandardized_1\", \n#'   oName_2=\"MathStandardized_2\")\n#' estimatedMath #ASquared and CSquared should be 0.85 and 0.045.\n#' \n#' class(GetDetails(estimatedMath))\n#' summary(GetDetails(estimatedMath))\n#' \n#' \nAceUnivariate <-\nfunction( method=c(\"DeFriesFulkerMethod1\",\"DeFriesFulkerMethod3\"), dataSet, oName_1, oName_2, rName=\"R\", manifestScale=\"Continuous\" ) {\n  #print( length(method) )\n  if( length(method) != 1 )\n    stop(paste(\"The method argument must contain exactly one element when calling the AceUnivariate function.  It contained \", length(method), \" elements.\", sep=\"\"))\n  else if( method == \"\"  )\n    stop(paste(\"The method argument must contain exactly one element when calling the AceUnivariate function.  It was blank.\", sep=\"\"))\n  else if( method == 'DeFriesFulkerMethod1' )\n    #return( DeFriesFulkerMethod1(outcomeForSubject1, outcomeForSubject2, relatedness) )\n    return( DeFriesFulkerMethod1(dataSet, oName_1, oName_2, rName) )\n  else if( method == 'DeFriesFulkerMethod3' )\n    #return( DeFriesFulkerMethod3(outcomeForSubject1, outcomeForSubject2, relatedness) )\n    return( DeFriesFulkerMethod3(dataSet, oName_1, oName_2, rName) )\n  else\n    stop(paste(\"The method argument, '\", method ,\"' was not recognized as a valid option to the AceUnivariate function.\", sep=\"\"))\n}\n",
    "created" : 1359423632580.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4038297649",
    "id" : "E4FC4BFC",
    "lastKnownWriteTime" : 1359424767,
    "path" : "F:/Projects/RDev/NlsyLinksStaging/NlsyLinks/R/AceUnivariate.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}