build-last-errors="[]"
build-last-errors-base-dir="F:/Projects/RDev/NlsyLinksStaging/NlsyLinks/"
build-last-outputs="[{\"output\":\"==> roxygenize('.', roclets=c('rd', 'collate', 'namespace'))\\n\\n\",\"type\":0},{\"output\":\"* checking for changes ... \",\"type\":1},{\"output\":\"DONE\\n\",\"type\":1},{\"output\":\"Updating namespace directives\\n\\n\",\"type\":1},{\"output\":\"==> Rcmd.exe INSTALL --no-multiarch NlsyLinks\\n\\n\",\"type\":0},{\"output\":\"* installing to library 'F:/Projects/RLibraries'\\r\\n\",\"type\":1},{\"output\":\"* installing *source* package 'NlsyLinks' ...\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** R\\r\\n\",\"type\":1},{\"output\":\"** data\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"**  moving datasets to lazyload DB\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** inst\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** preparing package for lazy loading\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"Creating a generic function for 'print' from package 'base' in package 'NlsyLinks'\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** help\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"*** installing help indices\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** building package indices\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** installing vignettes\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"   'Faq.Rnw' \\r\\n\",\"type\":1},{\"output\":\"   'NlsInvestigator.Rnw' \\r\\n\",\"type\":1},{\"output\":\"   'NlsyAce.Rnw' \\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** testing if installed package can be loaded\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"\\r\\n\",\"type\":1},{\"output\":\"* DONE (NlsyLinks)\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1}]"
compile_pdf_state="{\"errors\":[],\"output\":\"\",\"running\":false,\"tab_visible\":false,\"target_file\":\"\"}"
console_procs="[]"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":true,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOff\":[],\"matchOn\":[]},\"running\":false}"
imageDirtyState="0"
saveActionState="0"
